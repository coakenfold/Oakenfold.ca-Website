// Site vars, constants, colors
// --------------------------------------------------------------
$site-font-family: Arial, Verdana, sans-serif;

$mq-s: "only screen and (max-width: 40.063em)";
$mq-m: "only screen and (min-width: 40.063em)";
$mq-m-t: "only screen and (min-width: 40.063em) and (max-width: 64.063em)";
$mq-m14: "only screen and (min-width: 40.063em) and (max-width: 46.063em)";
$mq-m14u: "only screen and (min-width: 40.063em)";
$mq-m24: "only screen and (min-width: 46.063em) and (max-width: 52.063em)";
$mq-m24u: "only screen and (min-width: 46.063em)";
$mq-m34: "only screen and (min-width: 52.063em) and (max-width: 58.063em)";
$mq-m34u: "only screen and (min-width: 52.063em)";
$mq-m44: "only screen and (min-width: 58.063em) and (max-width: 64.063em)";
$mq-m44u: "only screen and (min-width: 58.063em)";
$mq-l: "only screen and (min-width: 64.063em)";

$cHalf: 3.125%;
$c1: 6.25%;
$c2: 12.5%;
$c3: 18.75%;
$c4: 25%;
$c5: 31.25%;
$c6: 37.5%;
$c7: 43.75%;
$c8: 50%;
$c9: 56.25%;
$c10: 62.5%;
$c11: 68.75%;
$c12: 75%;
$c13: 81.25%;
$c14: 87.5%;
$c15: 93.75%;
$c16: 100%;
$c3rd: 33.33%;


// Colors
// --------------------------------------------------------------
@import 'colors';


// Foundation
// --------------------------------------------------------------
// Some vars from above are used in _foundation_settings.scss
@import 'foundation-settings';
// Toggle Foundation features in here
@import 'foundation-components';




// Mixins & Functions
//
// Styleguide 1.4
// --------------------------------------------------------------
@import 'mixins-functions';


// http://foundation.zurb.com/docs/javascript-utilities.html#media-queries
meta.mq-s {
  font-family: "/" + $mq-s + "/";
  width: 40em;
}

meta.mq-m {
  font-family: "/" + $mq-m + "/";
  width: 40em;
}

meta.mq-m-t {
  font-family: "/" + $mq-m-t + "/";
  width: 40em;
}

meta.mq-m14 {
  font-family: "/" + $mq-m14 + "/";
  width: 40em;
}

meta.mq-m14u {
  font-family: "/" + $mq-m14u + "/";
  width: 40em;
}

meta.mq-m24 {
  font-family: "/" + $mq-m24 + "/";
  width: 40em;
}

meta.mq-m24u {
  font-family: "/" + $mq-m24u + "/";
  width: 40em;
}

meta.mq-m34 {
  font-family: "/" + $mq-m34 + "/";
  width: 40em;
}

meta.mq-m34u {
  font-family: "/" + $mq-m34u + "/";
  width: 40em;
}

meta.mq-m44 {
  font-family: "/" + $mq-m44 + "/";
  width: 40em;
}

meta.mq-m44u {
  font-family: "/" + $mq-m44u + "/";
  width: 40em;
}

meta.mq-l {
  font-family: "/" + $mq-l + "/";
  width: 40em;
}


.mq-debug {

    $mq-vert: 10px;
    
    &:hover .mq-debug__line {
        opacity: 0.4;
    }

    .mq-debug__line {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 900;
        opacity: 1;
        transition: opacity 100ms ease-in-out;
    }

    .mq-debug__line::after {
        background-color: rgba(255, 255, 255, 0.8);
        color: $black;
        font-size: 9px;
        line-height: 1;
        height: $mq-vert;
        position: absolute;
        left: 0;
        display: none;
        white-space: nowrap;
    }

    .mq-debug__line--1 {
        top: 0;
        
        &::after {
            @include mq-s {
                content: '@include mq-s()';
                display: block;
            }
        }
    }

    .mq-debug__line--2 {
        top: $mq-vert * 1;
        
        &::after {
            @include mq-m {
                content: '@include mq-m()';
                display: block;
            }
        }
    }

    .mq-debug__line--3 {
        top: $mq-vert * 2;
        
        &::after {
            @include mq-l {
                content: '@include mq-l()';
                display: block;
            }
        }
    }

    .mq-debug__line--4 {
        top: $mq-vert * 3;

        &::after {
            @include mq-s-t {
                content: '@include mq-s-t()';
                display: block;
            }
            
            @include mq-m-t {
                content: '@include mq-m-t()';
                display: block;
            }
            
        }
    }

    .mq-debug__line--5 {
        top: $mq-vert * 4;

        &::after {
            @include mq-m14 {
                content: '@include mq-m14()';
                display: block;
            }
            
            @include mq-m24 {
                content: '@include mq-m24()';
                display: block;
            }
            
            @include mq-m34 {
                content: '@include mq-m34()';
                display: block;
            }
            
            @include mq-m44 {
                content: '@include mq-m44()';
                display: block;
            }
        }
    }

    .mq-debug__line--6 {
        top: $mq-vert * 5;

        &::after {
            @include mq-m14u {
                content: '@include mq-m14u()';
                display: block;
            }
            
        }
    }

    .mq-debug__line--7 {
        top: $mq-vert * 6;

        &::after {
            @include mq-m24u {
                content: '@include mq-m24u()';
                display: block;
            }
            
        }
    }

    .mq-debug__line--8 {
        top: $mq-vert * 7;

        &::after {
            @include mq-m34u {
                content: '@include mq-m34u()';
                display: block;
            }
            
        }
    }

    .mq-debug__line--9 {
        top: $mq-vert * 8;

        &::after {
            @include mq-m44u {
                content: '@include mq-m44u()';
                display: block;
            }
            
        }
    }
 
    &.mq-debug--right {
        .mq-debug__line,
        .mq-debug__line::after {
            right: 0;
            left: inherit;
        }
    }
}



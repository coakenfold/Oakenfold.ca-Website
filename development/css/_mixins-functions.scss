// @mixin rem($property, $values...)
//
// Creates declarations that use rem units with a px fallback
//
// EG: If the html font-size is equivalent to 10px
// to generate a margin shorthand equal to  16px, auto you would call:
//
// @include rem(margin, 1.6, auto);
//
// Will error with font shorthand
//
// Will warn with line-height, or any variation of border
//
// $property - font-size, margin-top, margin, etc.
// $values - single or multiple values using rem multiplier.
//
// --------------------------------------------------------------
@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

@mixin rem($property, $values...) {

    @if $property == font {
        @warn "#{$property}: We don't support this shorthand. Besides, IE 9 & IE 10 do not support rem units when used in the font shorthand property (the entire declaration is ignored) or when used on pseudo elements.";
    }
    @if $property == line-height {
        @warn "#{$property}: IE 9, 10 and 11 do not support rem units when used in the 'line-height' property when used on :before and :after pseudo elements (https://connect.microsoft.com/IE/feedback/details/776744).";
        @warn "#{$property}: Use the line-height mixin instead, eg: @include line-height($unitless-font-size, $unitless-desired-line-height)";
    }

    $error-chrome: 0;
    @if $property == border {
        $error-chrome: 1;
    }
    @if $property == border-top {
        $error-chrome: 1;
    }
    @if $property == border-right {
        $error-chrome: 1;
    }
    @if $property == border-bottom {
        $error-chrome: 1;
    }
    @if $property == border-left {
        $error-chrome: 1;
    }
    @if $error-chrome == 1 {
        @warn "#{$property}: We don't support this shorthand. Besides, there is a Chrome bug with borders sized in rem: they disappear when the page is zoomed out.";
    }

    $max: length($values);
    $px-values: '';
    $rem-values: '';

    @for $i from 1 through $max {
        $cur-prop: nth($values, $i);
        @if $cur-prop == auto {
            $px-values: #{$px-values + auto};

            @if $i < $max {
                $px-values: #{$px-values + " "};
            }
        } @else {
            $value: strip-unit($cur-prop);
            $px-values: #{$px-values + $value*10}px;

            @if $i < $max {
                $px-values: #{$px-values + " "};
            }
        }
    } 

    @for $i from 1 through $max {
        $cur-prop: nth($values, $i);
        @if $cur-prop == auto {
            $rem-values: #{$rem-values + auto};

            @if $i < $max {
                $rem-values: #{$rem-values + " "};
            }
        } @else {
            $value: strip-unit($cur-prop);
            $rem-values: #{$rem-values + $value}rem;

            @if $i < $max {
                $rem-values: #{$rem-values + " "};
            }
        }
    } 

    #{$property}: $px-values; 
    #{$property}: $rem-values; 
}



// @mixin small($css)
//
//    //medium
//    @media only screen and (min-width:40.063em) {
//    }
//    //large
//    @media only screen and (min-width:64.063em) {
//    }
// $values - single or multiple values using rem multiplier.
//
// Compatibility untested.
//
// Styleguide 1.4
// --------------------------------------------------------------
@mixin mq-s {
    @media only screen {
        @content;
    }
}

@mixin mq-s-t {
    @media #{$mq-s} {
        @content;
    }
    
}

@mixin mq-m {
    @media #{$mq-m} {
        @content;
    }
    
}

@mixin mq-m-t {
    @media #{$mq-m-t} {
        @content;
    }
    
}

@mixin mq-m14 {
    @media #{$mq-m14} {
        @content;
    }
    
}

@mixin mq-m14u {
    @media #{$mq-m14u} {
        @content;
    }
    
}

@mixin mq-m24 {
    @media #{$mq-m24} {
        @content;
    }
    
}

@mixin mq-m24u {
    @media #{$mq-m24u} {
        @content;
    }
    
}

@mixin mq-m34 {
    @media #{$mq-m34} {
        @content;
    }
    
}

@mixin mq-m34u {
    @media #{$mq-m34u} {
        @content;
    }
    
}

@mixin mq-m44 {
    @media #{$mq-m44} {
        @content;
    }
    
}

@mixin mq-m44u {
    @media #{$mq-m44u} {
        @content;
    }
    
}

@mixin mq-l {
    @media #{$mq-l} {
        @content;
    }
}